// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId     Int      @default(autoincrement()) @id
  name       String
  email      String   @unique
  password   String
  address    String
  description String?
  cart       Cart?
  orders     Order[]
  @@index([userId])
}

model Product {
  productId   Int     @default(autoincrement()) @id
  name        String
  description String?
  price       Float
  stock       Int
  cartItems   CartItem[]
  orderItems  OrderItem[]
  @@index([productId])
}

model Order {
  orderId     Int      @default(autoincrement()) @id
  orderDate   DateTime @default(now())
  status      String
  userId      Int
  total       Float    @default(0)
  user        User    @relation(fields: [userId], references: [userId])
  orderItems  OrderItem[]
  @@index([orderId])
}

model Cart {
  cartId      Int      @default(autoincrement()) @id
  userId      Int      @unique
  user        User    @relation(fields: [userId], references: [userId])
  cartItems   CartItem[]
  @@index([cartId])
}

model CartItem {
  cartItemId  Int      @default(autoincrement()) @id
  cartId      Int
  productId   Int
  quantity    Int
  price       Float
  cart        Cart     @relation(fields: [cartId], references: [cartId])
  product     Product  @relation(fields: [productId], references: [productId])
  @@index([cartItemId])
}

model OrderItem {
  orderItemId Int      @default(autoincrement()) @id
  orderId     Int
  productId   Int
  quantity    Int
  price       Float
  order       Order   @relation(fields: [orderId], references: [orderId])
  product     Product @relation(fields: [productId], references: [productId])
  @@index([orderItemId])
}
